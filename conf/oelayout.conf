#
# Internal OE-core directory layout
#

TMPDIR		?= "${@os.path.realpath('${TOPDIR}/tmp')}"
TMPDIR[nohash]	 = True
CACHEDIR	?= "${TMPDIR}/cache"
CACHEDIR[nohash] = True
SCMDIR		?= "${TMPDIR}/scm"
SCMDIR[nohash]	 = True
CVSDIR		?= "${SCMDIR}/cvs"
CVSDIR[nohash]	 = True
SVNDIR		?= "${SCMDIR}/svn"
SVNDIR[nohash]	 = True
GITDIR		?= "${SCMDIR}/git"
GITDIR[nohash]	 = True
BZRDIR		?= "${SCMDIR}/bzr"
BZRDIR[nohash]	 = True

INGREDIENTS	?= "${TOPDIR}/ingredients"
INGREDIENTS[nohash] = True

SIGNATURE_FILE	 = "${FILE}.sig"

HOOKTMPDIR	 = "${TMPDIR}/hook"
HOOKTMPDIR[nohash] = True
STAMPDIR	 = "${TMPDIR}/stamp/${RECIPE_TYPE}/${RECIPE_ARCH}${EXTRA_ARCH}/${P}"
STAMPDIR[nohash] = True
WORKDIR		 = "${TMPDIR}/work/${RECIPE_TYPE}/${RECIPE_ARCH}${EXTRA_ARCH}/${P}"
WORKDIR[nohash]	 = True
T		 = "${WORKDIR}/tmp"
SRCDIR		 = "${WORKDIR}/src"
PATCHSUBDIR	 = "patches"
PATCHDIR	 = "${SRCDIR}/${PATCHSUBDIR}"
QUILTRC		 = "${PATCHDIR}/quiltrc"
S		 = "${SRCDIR}/${P}"
B		 = "${S}"
D		 = "${WORKDIR}/install"

PKGD		 = "${WORKDIR}/packages"
IMAGE_DIR	 = "${WORKDIR}/image"

STAGE_DIR		 = "${WORKDIR}/stage"
STAGE_UNPACKDIR		 = "${WORKDIR}/unpack"
RSTAGE_DIR		 = "${WORKDIR}/rstage"
FSTAGE_DIR		 = "${WORKDIR}/fstage"
MACHINE_SYSROOT		 = "${STAGE_DIR}/machine"
SDK_SYSROOT		 = "${STAGE_DIR}/sdk"
BUILD_SYSROOT		 = "${STAGE_DIR}/native"
HOST_SYSROOT		 = "${STAGE_DIR}/${HOST_TYPE}"
TARGET_SYSROOT		 = "${STAGE_DIR}/${TARGET_TYPE}"

IMAGE_DEPLOY_DIR	?= "${TMPDIR}/images"
IMAGE_DEPLOY_DIR[nohash] = True
PACKAGE_DEPLOY_DIR	?= "${TMPDIR}/packages"
PACKAGE_DEPLOY_DIR[nohash] = True

PREBAKE_CACHE_DIR	?= "${TMPDIR}/prebake"
PREBAKE_CACHE_DIR[nohash] = True

# Recipe directory layout
FILESPATHPKG	= "${P}:${PN}:files"
FILESPATHPKG[emit] = ""
FILESPATH	= "${@':'.join([os.path.normpath(os.path.join(fp, p, o)) for fp in d.getVar('FILE_DIRNAME', 1).split(':') for p in d.getVar('FILESPATHPKG', 1).split(':') for o in (d.getVar('OVERRIDES', 1) + ':').split(':')])}"
FILESPATH[emit] = ""

DEFAULT_UMASK	= "0022"
